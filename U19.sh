# /bin/sh

# 작성날짜 : 2022년 6월 8일 
# 작성자 : 우은지
# 동작방식 : cron 파일 소유자와 권한을 점검하기 위한 코드
# -> /etc/cron 파일의 소유자와 권한 가져와서, 권한이 640 이상, 소유자가 root면 safe로 판단하고 권한이 640 초과하거나 소유자 root가 아니면 unsafe로 판단

checkFile1=/etc/cron.allow #현재 이 파일 없음
checkFile2=/etc/cron.deny

allowRoot=`ls -l $checkFile1 | awk '{print $3}'` # checkFile1의 ls 결과 중 3번째 열에 있는 값 가져옴
denyRoot=`ls -l $checkFile2 | awk '{print $3}'`

check1=0
check2=0

if [ $allowRoot -eq 'root' ];then
    if [ `stat -c %a $checkFile1` -le 640 ];then # stat -c 옵션 = 입력한 포맷대로 출력, stat %a 포매팅 = 권한을 8진수로 알려줌
        check1=1
    else
        echo "/etc/cron.allow up 640" >> u19.log
else
    echo "/etc/cron.allow not root" >> u19.log
fi

if [ $denyRoot -eq 'root' ];then
    if [ `stat -c %a $checkFile2` -le 640 ];then
    check2=1
    else
        echo "/etc/cron.deny up 640" >> u19.log
else
    echo "/etc/cron.deny not root" >> u19.log
fi

if [ $check2 -eq 1 ] && [ $check1 -eq 1];then
    echo "[safe]" >> u19.log
    else
        echo "[unsafe]" >> u19.log
fi