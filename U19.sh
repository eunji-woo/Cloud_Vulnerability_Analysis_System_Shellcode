# /bin/sh

# 작성날짜 : 2022년 6월 8일, 8월 24일
# 작성자 : 우은지, 이은경
# 동작방식 : cron 파일 소유자와 권한을 점검하기 위한 코드
# -> /etc/cron 파일의 소유자와 권한 가져와서, 권한이 640 이하, 소유자가 root면 safe로 판단하고 권한이 640 초과하거나 소유자 root가 아니면 unsafe로 판단

vuln_number="U19"
vuln_name="cron 파일 소유자 및 권한 설정"
vuln_result_date="$(date +%Y)-$(date +%m)-$(date +%d) $(date +%H):$(date +%M):$(date +%S)"
vuln_type="파일 및 디렉토리 관리"
vuln_severity="3"
vuln_result="취약하지 않음"
vuln_desc="해당 파일 또는 서비스가 없습니다."
vuln_host_id=$(hostname -I)

checkFile1=/etc/cron.allow #빈 파일로 만듦
checkFile2=/etc/cron.deny

allowRoot=`ls -l $checkFile1 | awk '{print $3}'` # checkFile1의 ls 결과 중 3번째 열에 있는 값 가져옴
denyRoot=`ls -l $checkFile2 | awk '{print $3}'`

check1=0 #allow 소유자, 권한
check2=0 #deny 소유자, 권한

if [ $allowRoot == 'root' ];then
    if [ `stat -c %a $checkFile1` -le 640 ];then # stat -c 옵션 = 입력한 포맷대로 출력, stat %a 포매팅 = 권한을 8진수로 알려줌
        check1=1 #allow 안전
    else
        vuln_desc+="/etc/cron.allow의 소유자는 root, 권한은 640 이상임"
    fi
else
    vuln_desc+="/etc/cron.allow의 소유자는 root가 아님"
fi

if [ $denyRoot == 'root' ];then
    if [ `stat -c %a $checkFile2` -le 640 ];then
        check2=1 #deny 안전
    else
        vuln_desc+="/etc/cron.deny의 소유자는 root, 권한은 640 이상임"
    fi
else
    vuln_desc+="/etc/cron.deny의 소유자는 root가 아님"
fi

if [ $check2 -eq 1 ] && [ $check1 -eq 1 ];then
    vuln_desc="/etc/crontab 파일 소유자가 root이고, 권한이 640이하임"
else
    vuln_result="취약함"
fi

echo "{\\"vuln_number\\":\\"${vuln_number}\\", \\"vuln_name\\":\\"${vuln_name}\\", \\"vuln_result_date\\":\\"${vuln_result_date}\\", \\"vuln_type\\":\\"${vuln_type}\\", \\"vuln_severity\\":\\"${vuln_severity}\\", \\"vuln_result\\":\\"${vuln_result}\\", \\"vuln_desc\\":\\"${vuln_desc}\\", \\"vuln_host_id\\":\\"${vuln_host_id}\\"}" >> result.log
